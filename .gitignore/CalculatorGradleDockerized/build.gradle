/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.3/userguide/java_library_plugin.html
 */

// Apply the java-library plugin to add support for Java Library
apply plugin: 'java-library'

// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:23.0'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
    
    // Use Mockito to mock
    testCompile "org.mockito:mockito-core:1.+"
    
    // https://mvnrepository.com/artifact/pl.pragmatists/JUnitParams
	testCompile group: 'pl.pragmatists', name: 'JUnitParams', version: '1.0.4'
	
}

buildscript {
  ext {
    springBootVersion = '1.3.0.RELEASE'
  }
  repositories {
    mavenCentral()
  }
  dependencies {
    classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    classpath "se.transmode.gradle:gradle-docker:1.2"
  }
}

apply plugin: 'docker'

task buildDocker(type: Docker) {
  baseImage = 'screspis/gradle'
  push = project.hasProperty('push')
  tag = 'screspis/calculatorgradledockerized'
  addFile {
    from jar
    rename {'app.jar'}
  }
  entryPoint(['java', '-Djava.security.egd=file:/dev/./urandom', '-jar', '/app.jar'])
 
}

buildDocker.dependsOn(build)

jar {
   manifest {
       attributes(
               'Main-Class': 'com.privalia.principal.Main'
       )
   }
}
